diff --git a/node_modules/dynamodb-localhost/dynamodb/config.json b/node_modules/dynamodb-localhost/dynamodb/config.json
index dc7d7a3..c52b87b 100644
--- a/node_modules/dynamodb-localhost/dynamodb/config.json
+++ b/node_modules/dynamodb-localhost/dynamodb/config.json
@@ -1,6 +1,6 @@
 {
   "setup": {
-    "download_url": "http://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz",
+    "download_url": "https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_2023-06-09.tar.gz",
     "install_path": "bin",
     "jar": "DynamoDBLocal.jar"
   },
diff --git a/node_modules/dynamodb-localhost/dynamodb/installer.js b/node_modules/dynamodb-localhost/dynamodb/installer.js
index c2789c7..874c1c2 100644
--- a/node_modules/dynamodb-localhost/dynamodb/installer.js
+++ b/node_modules/dynamodb-localhost/dynamodb/installer.js
@@ -3,7 +3,7 @@
 var tar = require("tar"),
   zlib = require("zlib"),
   path = require("path"),
-  http = require("http"),
+  https = require("https"),
   fs = require("fs"),
   ProgressBar = require("progress"),
   utils = require("./utils");
@@ -12,7 +12,7 @@ var download = function(downloadUrl, installPath, callback) {
   console.log(
     `Started downloading dynamodb-local from ${downloadUrl} into ${installPath}. Process may take few minutes.`
   );
-  http
+  https
     .get(downloadUrl, function(response) {
       var len = parseInt(response.headers["content-length"], 10),
         bar = new ProgressBar(
diff --git a/node_modules/dynamodb-localhost/dynamodb/installer.js.orig b/node_modules/dynamodb-localhost/dynamodb/installer.js.orig
new file mode 100644
index 0000000..c2789c7
--- /dev/null
+++ b/node_modules/dynamodb-localhost/dynamodb/installer.js.orig
@@ -0,0 +1,75 @@
+"use strict";
+
+var tar = require("tar"),
+  zlib = require("zlib"),
+  path = require("path"),
+  http = require("http"),
+  fs = require("fs"),
+  ProgressBar = require("progress"),
+  utils = require("./utils");
+
+var download = function(downloadUrl, installPath, callback) {
+  console.log(
+    `Started downloading dynamodb-local from ${downloadUrl} into ${installPath}. Process may take few minutes.`
+  );
+  http
+    .get(downloadUrl, function(response) {
+      var len = parseInt(response.headers["content-length"], 10),
+        bar = new ProgressBar(
+          "Downloading dynamodb-local [:bar] :percent :etas",
+          {
+            complete: "=",
+            incomplete: " ",
+            width: 40,
+            total: len
+          }
+        );
+
+      if (200 != response.statusCode) {
+        throw new Error(
+          "Error getting DynamoDb local latest tar.gz location " +
+            response.headers.location +
+            ": " +
+            response.statusCode
+        );
+      }
+
+      response
+        .pipe(zlib.Unzip())
+        .pipe(
+          tar.x({
+            C: installPath
+          })
+        )
+        .on("data", function(chunk) {
+          bar.tick(chunk.length);
+        })
+        .on("end", function() {
+          callback("\n Installation complete!");
+        })
+        .on("error", function(err) {
+          throw new Error("Error in downloading Dynamodb local " + err);
+        });
+    })
+    .on("error", function(err) {
+      throw new Error("Error in downloading Dynamodb local " + err);
+    });
+};
+
+var install = function(config, callback) {
+  var install_path = utils.absPath(config.setup.install_path),
+    jar = config.setup.jar,
+    download_url = config.setup.download_url;
+
+  try {
+    if (fs.existsSync(path.join(install_path, jar))) {
+      callback("Dynamodb is already installed on path!");
+    } else {
+      utils.createDir(config.setup.install_path);
+      download(download_url, install_path, callback);
+    }
+  } catch (err) {
+    throw new Error("Error configuring or installing Dynamodb local " + err);
+  }
+};
+module.exports.install = install;
